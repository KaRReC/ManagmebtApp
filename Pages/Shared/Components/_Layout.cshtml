@inject ITranslationService translationServiceLayout
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessorLayout
@inject SignInManager<NewOPAL.Models.OpalUser> SignInManager
@{
    String pageRoute = ViewContext.RouteData.Values["page"].ToString();
    String Route = ViewContext.RouteData.Values["area"].ToString();
    string domainName = Context.Request.PathBase.ToString();

    int? Theme = HttpContextAccessorLayout.HttpContext.Session.GetInt32("data-theme");

    int? LanguageId = translationServiceLayout.GetLanguageId();
    if (Theme == null)
    {
        Theme = 0;
    }
}
<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="expires" content="0">
    <meta http-equiv="cache-control" content="no-store, no-cache, must-revalidate">
    <meta http-equiv="cache-control" content="post-check=0, pre-check=0">
    <meta http-equiv="pragma" content="no-cache">
    <meta name="Description" content="@ViewData["Title"]">

    <title class="Translation">@ViewData["Title"]</title>
    <link rel="preload" href="~/fontawesome-free-5.13.0-web/css/all.min.css" as="style" onload="this.rel='stylesheet'">
    <link rel="preload" href="~/lib/Roboto/Roboto.min.css" as="style" onload="this.rel='stylesheet'">
    <link rel="preload" href="~/lib/bootstrap/bootstrap-select.min.css" as="style" onload="this.rel='stylesheet'">

    <link rel="stylesheet" href="~/lib/MDB-Free_4.15.0/css/bootstrap.min.css" media="all" />
    <link rel="stylesheet" href="~/lib/MDB-Free_4.15.0/css/mdb.min.css" media="all" />
    <link rel="stylesheet" href="~/css/Layout.min.css" asp-append-version="true" async media="all" />
    @Html.Assets().Styles.Render()

    @*@if (IsSectionDefined("AddToHead"))
    {
        @RenderSection("AddToHead", required: true)
    }*@

    @switch (Route)
    {
        case string a when a.Contains("Main"):
            @*<script type="module" src="~/js/MainPages/MainPages.js" asp-append-version="true" async></script>*@
            break;
        case string a when a.Contains("General"):
            @*<link rel="stylesheet" href="~/lib/lightpick/lightpick.css" />*@
            break;
    }
</head>
<body>
    @if (!pageRoute.Contains("Login"))
    {
        OpalUser user = new OpalUser();
        @if (SignInManager.IsSignedIn(User))
        {
            user = SignInManager.UserManager.GetUserAsync(User).Result;
        }
        <!-- Navbar -->
        @await Component.InvokeAsync("Menu", user)
    }
    @{
        string currentYear = DateTime.Now.Year.ToString();
        string style = "";
        string wrapperStyle = "";
        string main = "";
        string dataTheme = "";
        string checkedTheme = "";

        if (pageRoute.Contains("Login"))
        {
            style = "style=background-image:url(" + @domainName + "/images/1.webp);";
        }
        else
        {
            main = "pt-5";
            wrapperStyle = "pt-5 MainSection";
        }

        if (Theme == 0)
        {
            dataTheme = "light";
            checkedTheme = "";
        }
        else
        {
            checkedTheme = "checked";
            dataTheme = "dark";
        }
    }
    <div class="view" @style>
        <main role="main" class="@main" data-theme="@dataTheme">
            <div class="wrapper @wrapperStyle">
                <section class="container-fluid">
                    @RenderBody()
                    @if (pageRoute.Contains("Login"))
                    {
                        <div class="col-12 material-toggle d-flex justify-content-end align-items-center align-self-end mt-auto pr-5" id="ThemeMode" hidden>
                            <h3 class="mr-4 Translation">@translationServiceLayout.TranslateWord(LanguageId, "Dark Mode")</h3>
                            <input id="MaterialToggleBlue" name="MaterialToggleBlue" type="checkbox" @checkedTheme />
                            <label for="MaterialToggleBlue" class="label-blue"></label>
                        </div>
                    }
                </section>
            </div>
            <partial name="_ModalInfo" />
            @if (!pageRoute.Contains("Login"))
            {
                <footer class="page-footer font-small z-depth-2">

                    <!-- Copyright -->
                    <div class="footer-copyright text-center py-3 text-dark ">
                        <span class="Arial-Black">Let<span class="text-white">Me</span>Repair</span>
                        &copy; 2020  @if (currentYear != "2020")
                        {
                            @Html.Raw("-" + currentYear);
                        } New OPAL
                    </div>
                    <!-- Copyright -->

                </footer>
                <!-- Footer -->
            }
        </main>
    </div>

    <!-- Footer -->
    @{

        string FooterClass = "";

        if (pageRoute.Contains("Login"))
        {
            FooterClass = "landing-page-footer";
            <footer class="page-footer font-small @FooterClass">

                <!-- Copyright -->
                <div class="footer-copyright text-center py-3 text-dark ">
                    <span class="Arial-Black">Let<span class="text-white">Me</span>Repair</span>
                    &copy; 2020  @if (currentYear != "2020")
                    {
                        @Html.Raw("-" + currentYear);
                    } New OPAL
                </div>
                <!-- Copyright -->

            </footer>
            <!-- Footer -->
        }
    }

    <script src="~/lib/MDB-Free_4.15.0/js/jquery.min.js"></script>
    <script src="~/lib/MDB-Free_4.15.0/js/popper.min.js"></script>
    <script src="~/lib/MDB-Free_4.15.0/js/bootstrap.min.js"></script>
    <script src="~/lib/MDB-Free_4.15.0/js/mdb.min.js"></script>
    <script src="~/lib/bootstrap/bootstrap-select.min.js" async></script>

    <script src="~/lib/Axios/axios.min.js" async></script>
    <script type="module" src="~/js/Layout.js" asp-append-version="true" async></script>
    @Html.Assets().Scripts.Render()
    @*<script type="module" src="~/js/Translations.js" asp-append-version="true"></script>*@
    @switch (Route)
    {
        case string a when a.Contains("Main"):
            <script type="module" src="~/js/MainPages/MainPages.js" asp-append-version="true" async></script>
            break;
        case string a when a.Contains("General"):
            <script type="module" src="~/js/GeneralPages/GeneralPages.js" asp-append-version="true"></script>
            break;
        case string a when a.Contains("SpareParts"):
            <script type="module" src="~/js/SpareParts/SpareParts.js" asp-append-version="true"></script>
            break;
    }

    @RenderSection("Scripts", required: false)
</body>
</html>
